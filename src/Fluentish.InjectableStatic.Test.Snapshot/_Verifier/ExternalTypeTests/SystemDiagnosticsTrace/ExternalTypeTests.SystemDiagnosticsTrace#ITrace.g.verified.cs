//HintName: ITrace.g.cs
// <auto-generated />
#nullable enable
#pragma warning disable
namespace Fluentish.Injectable.System.Diagnostics
{
    /// <inheritdoc cref="global::System.Diagnostics.Trace"/>
    public interface ITrace
    {
        /// <inheritdoc cref="global::System.Diagnostics.Trace.Flush"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Flush();

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Close"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Close();

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Assert"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Assert([global::System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute(false)] bool condition);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Assert"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Assert([global::System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute(false)] bool condition, string? message);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Assert"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Assert([global::System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute(false)] bool condition, string? message, string? detailMessage);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Fail"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute()]
        void Fail(string? message);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Fail"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute()]
        void Fail(string? message, string? detailMessage);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Refresh"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Refresh();

        /// <inheritdoc cref="global::System.Diagnostics.Trace.TraceInformation"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void TraceInformation(string? message);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.TraceInformation"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void TraceInformation([global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("CompositeFormat")] string format, params object?[] args);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.TraceWarning"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void TraceWarning(string? message);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.TraceWarning"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void TraceWarning([global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("CompositeFormat")] string format, params object?[] args);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.TraceError"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void TraceError(string? message);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.TraceError"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void TraceError([global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("CompositeFormat")] string format, params object?[] args);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Write"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Write(string? message);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Write"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Write(object? value);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Write"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Write(string? message, string? category);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Write"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Write(object? value, string? category);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteLine"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteLine(string? message);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteLine"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteLine(object? value);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteLine"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteLine(string? message, string? category);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteLine"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteLine(object? value, string? category);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteIf"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteIf(bool condition, string? message);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteIf"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteIf(bool condition, object? value);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteIf"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteIf(bool condition, string? message, string? category);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteIf"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteIf(bool condition, object? value, string? category);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteLineIf"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteLineIf(bool condition, string? message);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteLineIf"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteLineIf(bool condition, object? value);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteLineIf"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteLineIf(bool condition, string? message, string? category);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.WriteLineIf"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void WriteLineIf(bool condition, object? value, string? category);

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Indent"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Indent();

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Unindent"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        void Unindent();

        /// <inheritdoc cref="global::System.Diagnostics.Trace.CorrelationManager"/>
        global::System.Diagnostics.CorrelationManager CorrelationManager { get; }

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Listeners"/>
        global::System.Diagnostics.TraceListenerCollection Listeners { get; }

        /// <inheritdoc cref="global::System.Diagnostics.Trace.AutoFlush"/>
        bool AutoFlush { get; set; }

        /// <inheritdoc cref="global::System.Diagnostics.Trace.UseGlobalLock"/>
        bool UseGlobalLock { get; set; }

        /// <inheritdoc cref="global::System.Diagnostics.Trace.IndentLevel"/>
        int IndentLevel { get; set; }

        /// <inheritdoc cref="global::System.Diagnostics.Trace.IndentSize"/>
        int IndentSize { get; set; }

        /// <inheritdoc cref="global::System.Diagnostics.Trace.Refreshing"/>
        event global::System.EventHandler? Refreshing;
    }
}
#pragma warning restore

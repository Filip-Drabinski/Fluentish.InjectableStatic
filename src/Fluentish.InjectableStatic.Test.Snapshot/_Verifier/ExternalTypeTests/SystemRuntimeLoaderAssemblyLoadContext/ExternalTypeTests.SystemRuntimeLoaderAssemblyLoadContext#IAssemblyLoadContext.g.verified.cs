//HintName: IAssemblyLoadContext.g.cs
// <auto-generated />
#nullable enable
#pragma warning disable
namespace Fluentish.Injectable.System.Runtime.Loader
{
    /// <inheritdoc cref="global::System.Runtime.Loader.AssemblyLoadContext"/>
    public interface IAssemblyLoadContext
    {
        /// <inheritdoc cref="global::System.Runtime.Loader.AssemblyLoadContext.Default"/>
        global::System.Runtime.Loader.AssemblyLoadContext Default { get; }

        /// <inheritdoc cref="global::System.Runtime.Loader.AssemblyLoadContext.All"/>
        global::System.Collections.Generic.IEnumerable<global::System.Runtime.Loader.AssemblyLoadContext> All { get; }

        /// <inheritdoc cref="global::System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext"/>
        global::System.Runtime.Loader.AssemblyLoadContext? CurrentContextualReflectionContext { get; }

        /// <inheritdoc cref="global::System.Runtime.Loader.AssemblyLoadContext.GetLoadContext"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        global::System.Runtime.Loader.AssemblyLoadContext? GetLoadContext(global::System.Reflection.Assembly assembly);

        /// <inheritdoc cref="global::System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        global::System.Reflection.AssemblyName GetAssemblyName(string assemblyPath);

        /// <inheritdoc cref="global::System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        global::System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope EnterContextualReflection(global::System.Reflection.Assembly? activating);

    }
}
#pragma warning restore

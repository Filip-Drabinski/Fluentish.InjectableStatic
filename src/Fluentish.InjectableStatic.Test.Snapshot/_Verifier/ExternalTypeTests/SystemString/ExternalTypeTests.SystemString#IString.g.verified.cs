//HintName: IString.g.cs
// <auto-generated />
#nullable enable
#pragma warning disable
namespace Fluentish.Injectable.System
{
    /// <inheritdoc cref="string"/>
    public interface IString
    {
        /// <inheritdoc cref="string.Empty"/>
        string Empty { get; }

        /// <inheritdoc cref="string.Intern"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Intern(string str);

        /// <inheritdoc cref="string.IsInterned"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string? IsInterned(string str);

        /// <inheritdoc cref="string.Compare"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Compare(string? strA, string? strB);

        /// <inheritdoc cref="string.Compare"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Compare(string? strA, string? strB, bool ignoreCase);

        /// <inheritdoc cref="string.Compare"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Compare(string? strA, string? strB, global::System.StringComparison comparisonType);

        /// <inheritdoc cref="string.Compare"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Compare(string? strA, string? strB, global::System.Globalization.CultureInfo? culture, global::System.Globalization.CompareOptions options);

        /// <inheritdoc cref="string.Compare"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Compare(string? strA, string? strB, bool ignoreCase, global::System.Globalization.CultureInfo? culture);

        /// <inheritdoc cref="string.Compare"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Compare(string? strA, int indexA, string? strB, int indexB, int length);

        /// <inheritdoc cref="string.Compare"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Compare(string? strA, int indexA, string? strB, int indexB, int length, bool ignoreCase);

        /// <inheritdoc cref="string.Compare"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Compare(string? strA, int indexA, string? strB, int indexB, int length, bool ignoreCase, global::System.Globalization.CultureInfo? culture);

        /// <inheritdoc cref="string.Compare"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Compare(string? strA, int indexA, string? strB, int indexB, int length, global::System.Globalization.CultureInfo? culture, global::System.Globalization.CompareOptions options);

        /// <inheritdoc cref="string.Compare"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Compare(string? strA, int indexA, string? strB, int indexB, int length, global::System.StringComparison comparisonType);

        /// <inheritdoc cref="string.CompareOrdinal"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int CompareOrdinal(string? strA, string? strB);

        /// <inheritdoc cref="string.CompareOrdinal"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int CompareOrdinal(string? strA, int indexA, string? strB, int indexB, int length);

        /// <inheritdoc cref="string.Equals"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        bool Equals(string? a, string? b);

        /// <inheritdoc cref="string.Equals"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        bool Equals(string? a, string? b, global::System.StringComparison comparisonType);

        /// <inheritdoc cref="string.GetHashCode"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int GetHashCode(global::System.ReadOnlySpan<char> value);

        /// <inheritdoc cref="string.GetHashCode"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int GetHashCode(global::System.ReadOnlySpan<char> value, global::System.StringComparison comparisonType);

        /// <inheritdoc cref="string.Create"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Create<TState>(int length, TState state, global::System.Buffers.SpanAction<char, TState> action);

        /// <inheritdoc cref="string.Create"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Create(global::System.IFormatProvider? provider, ref global::System.Runtime.CompilerServices.DefaultInterpolatedStringHandler handler);

        /// <inheritdoc cref="string.Create"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Create(global::System.IFormatProvider? provider, global::System.Span<char> initialBuffer, ref global::System.Runtime.CompilerServices.DefaultInterpolatedStringHandler handler);

        /// <inheritdoc cref="string.Copy"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.ObsoleteAttribute("This API should not be used to create mutable strings. See https://go.microsoft.com/fwlink/?linkid=2084035 for alternatives.")]
        string Copy(string str);

        /// <inheritdoc cref="string.IsNullOrEmpty"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        bool IsNullOrEmpty([global::System.Diagnostics.CodeAnalysis.NotNullWhenAttribute(false)] string? value);

        /// <inheritdoc cref="string.IsNullOrWhiteSpace"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        bool IsNullOrWhiteSpace([global::System.Diagnostics.CodeAnalysis.NotNullWhenAttribute(false)] string? value);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(object? arg0);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(object? arg0, object? arg1);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(object? arg0, object? arg1, object? arg2);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(params object?[] args);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat<T>(global::System.Collections.Generic.IEnumerable<T> values);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(global::System.Collections.Generic.IEnumerable<string?> values);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(string? str0, string? str1);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(string? str0, string? str1, string? str2);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(string? str0, string? str1, string? str2, string? str3);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(global::System.ReadOnlySpan<char> str0, global::System.ReadOnlySpan<char> str1);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(global::System.ReadOnlySpan<char> str0, global::System.ReadOnlySpan<char> str1, global::System.ReadOnlySpan<char> str2);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(global::System.ReadOnlySpan<char> str0, global::System.ReadOnlySpan<char> str1, global::System.ReadOnlySpan<char> str2, global::System.ReadOnlySpan<char> str3);

        /// <inheritdoc cref="string.Concat"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Concat(params string?[] values);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format([global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("CompositeFormat")] string format, object? arg0);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format([global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("CompositeFormat")] string format, object? arg0, object? arg1);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format([global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("CompositeFormat")] string format, object? arg0, object? arg1, object? arg2);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format([global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("CompositeFormat")] string format, params object?[] args);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format(global::System.IFormatProvider? provider, [global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("CompositeFormat")] string format, object? arg0);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format(global::System.IFormatProvider? provider, [global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("CompositeFormat")] string format, object? arg0, object? arg1);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format(global::System.IFormatProvider? provider, [global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("CompositeFormat")] string format, object? arg0, object? arg1, object? arg2);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format(global::System.IFormatProvider? provider, [global::System.Diagnostics.CodeAnalysis.StringSyntaxAttribute("CompositeFormat")] string format, params object?[] args);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format<TArg0>(global::System.IFormatProvider? provider, global::System.Text.CompositeFormat format, TArg0 arg0);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format<TArg0, TArg1>(global::System.IFormatProvider? provider, global::System.Text.CompositeFormat format, TArg0 arg0, TArg1 arg1);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format<TArg0, TArg1, TArg2>(global::System.IFormatProvider? provider, global::System.Text.CompositeFormat format, TArg0 arg0, TArg1 arg1, TArg2 arg2);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format(global::System.IFormatProvider? provider, global::System.Text.CompositeFormat format, params object?[] args);

        /// <inheritdoc cref="string.Format"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Format(global::System.IFormatProvider? provider, global::System.Text.CompositeFormat format, global::System.ReadOnlySpan<object?> args);

        /// <inheritdoc cref="string.Join"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Join(char separator, params string?[] value);

        /// <inheritdoc cref="string.Join"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Join(string? separator, params string?[] value);

        /// <inheritdoc cref="string.Join"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Join(char separator, string?[] value, int startIndex, int count);

        /// <inheritdoc cref="string.Join"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Join(string? separator, string?[] value, int startIndex, int count);

        /// <inheritdoc cref="string.Join"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Join(string? separator, global::System.Collections.Generic.IEnumerable<string?> values);

        /// <inheritdoc cref="string.Join"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Join(char separator, params object?[] values);

        /// <inheritdoc cref="string.Join"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Join(string? separator, params object?[] values);

        /// <inheritdoc cref="string.Join"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Join<T>(char separator, global::System.Collections.Generic.IEnumerable<T> values);

        /// <inheritdoc cref="string.Join"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        string Join<T>(string? separator, global::System.Collections.Generic.IEnumerable<T> values);

    }
}
#pragma warning restore

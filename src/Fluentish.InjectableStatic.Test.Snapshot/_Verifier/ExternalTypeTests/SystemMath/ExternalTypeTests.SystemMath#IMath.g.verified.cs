//HintName: IMath.g.cs
// <auto-generated />
#pragma warning disable
namespace Fluentish.Injectable.System
{
    /// <inheritdoc cref="global::System.Math"/>
    public interface IMath
    {
        /// <inheritdoc cref="global::System.Math.E"/>
        double E { get; }

        /// <inheritdoc cref="global::System.Math.PI"/>
        double PI { get; }

        /// <inheritdoc cref="global::System.Math.Tau"/>
        double Tau { get; }

        /// <inheritdoc cref="global::System.Math.Acos"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Acos(double d);

        /// <inheritdoc cref="global::System.Math.Acosh"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Acosh(double d);

        /// <inheritdoc cref="global::System.Math.Asin"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Asin(double d);

        /// <inheritdoc cref="global::System.Math.Asinh"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Asinh(double d);

        /// <inheritdoc cref="global::System.Math.Atan"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Atan(double d);

        /// <inheritdoc cref="global::System.Math.Atanh"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Atanh(double d);

        /// <inheritdoc cref="global::System.Math.Atan2"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Atan2(double y, double x);

        /// <inheritdoc cref="global::System.Math.Cbrt"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Cbrt(double d);

        /// <inheritdoc cref="global::System.Math.Ceiling"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Ceiling(double a);

        /// <inheritdoc cref="global::System.Math.Cos"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Cos(double d);

        /// <inheritdoc cref="global::System.Math.Cosh"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Cosh(double value);

        /// <inheritdoc cref="global::System.Math.Exp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Exp(double d);

        /// <inheritdoc cref="global::System.Math.Floor"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Floor(double d);

        /// <inheritdoc cref="global::System.Math.FusedMultiplyAdd"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double FusedMultiplyAdd(double x, double y, double z);

        /// <inheritdoc cref="global::System.Math.Log"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Log(double d);

        /// <inheritdoc cref="global::System.Math.Log2"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Log2(double x);

        /// <inheritdoc cref="global::System.Math.Log10"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Log10(double d);

        /// <inheritdoc cref="global::System.Math.Pow"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Pow(double x, double y);

        /// <inheritdoc cref="global::System.Math.Sin"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Sin(double a);

        /// <inheritdoc cref="global::System.Math.SinCos"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        (double Sin, double Cos) SinCos(double x);

        /// <inheritdoc cref="global::System.Math.Sinh"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Sinh(double value);

        /// <inheritdoc cref="global::System.Math.Sqrt"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Sqrt(double d);

        /// <inheritdoc cref="global::System.Math.Tan"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Tan(double a);

        /// <inheritdoc cref="global::System.Math.Tanh"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Tanh(double value);

        /// <inheritdoc cref="global::System.Math.Abs"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        short Abs(short value);

        /// <inheritdoc cref="global::System.Math.Abs"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Abs(int value);

        /// <inheritdoc cref="global::System.Math.Abs"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        long Abs(long value);

        /// <inheritdoc cref="global::System.Math.Abs"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        nint Abs(nint value);

        /// <inheritdoc cref="global::System.Math.Abs"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        sbyte Abs(sbyte value);

        /// <inheritdoc cref="global::System.Math.Abs"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        decimal Abs(decimal value);

        /// <inheritdoc cref="global::System.Math.Abs"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Abs(double value);

        /// <inheritdoc cref="global::System.Math.Abs"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        float Abs(float value);

        /// <inheritdoc cref="global::System.Math.BigMul"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        long BigMul(int a, int b);

        /// <inheritdoc cref="global::System.Math.BigMul"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        ulong BigMul(ulong a, ulong b, out ulong low);

        /// <inheritdoc cref="global::System.Math.BigMul"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        long BigMul(long a, long b, out long low);

        /// <inheritdoc cref="global::System.Math.BitDecrement"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double BitDecrement(double x);

        /// <inheritdoc cref="global::System.Math.BitIncrement"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double BitIncrement(double x);

        /// <inheritdoc cref="global::System.Math.CopySign"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double CopySign(double x, double y);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int DivRem(int a, int b, out int result);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        long DivRem(long a, long b, out long result);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        (sbyte Quotient, sbyte Remainder) DivRem(sbyte left, sbyte right);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        (byte Quotient, byte Remainder) DivRem(byte left, byte right);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        (short Quotient, short Remainder) DivRem(short left, short right);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        (ushort Quotient, ushort Remainder) DivRem(ushort left, ushort right);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        (int Quotient, int Remainder) DivRem(int left, int right);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        (uint Quotient, uint Remainder) DivRem(uint left, uint right);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        (long Quotient, long Remainder) DivRem(long left, long right);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        (ulong Quotient, ulong Remainder) DivRem(ulong left, ulong right);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        (nint Quotient, nint Remainder) DivRem(nint left, nint right);

        /// <inheritdoc cref="global::System.Math.DivRem"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        (nuint Quotient, nuint Remainder) DivRem(nuint left, nuint right);

        /// <inheritdoc cref="global::System.Math.Ceiling"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        decimal Ceiling(decimal d);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        byte Clamp(byte value, byte min, byte max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        decimal Clamp(decimal value, decimal min, decimal max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Clamp(double value, double min, double max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        short Clamp(short value, short min, short max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Clamp(int value, int min, int max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        long Clamp(long value, long min, long max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        nint Clamp(nint value, nint min, nint max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        sbyte Clamp(sbyte value, sbyte min, sbyte max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        float Clamp(float value, float min, float max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        ushort Clamp(ushort value, ushort min, ushort max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        uint Clamp(uint value, uint min, uint max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        ulong Clamp(ulong value, ulong min, ulong max);

        /// <inheritdoc cref="global::System.Math.Clamp"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        nuint Clamp(nuint value, nuint min, nuint max);

        /// <inheritdoc cref="global::System.Math.Floor"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        decimal Floor(decimal d);

        /// <inheritdoc cref="global::System.Math.IEEERemainder"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double IEEERemainder(double x, double y);

        /// <inheritdoc cref="global::System.Math.ILogB"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int ILogB(double x);

        /// <inheritdoc cref="global::System.Math.Log"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Log(double a, double newBase);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        byte Max(byte val1, byte val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        decimal Max(decimal val1, decimal val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Max(double val1, double val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        short Max(short val1, short val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Max(int val1, int val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        long Max(long val1, long val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        nint Max(nint val1, nint val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        sbyte Max(sbyte val1, sbyte val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        float Max(float val1, float val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        ushort Max(ushort val1, ushort val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        uint Max(uint val1, uint val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        ulong Max(ulong val1, ulong val2);

        /// <inheritdoc cref="global::System.Math.Max"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        nuint Max(nuint val1, nuint val2);

        /// <inheritdoc cref="global::System.Math.MaxMagnitude"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double MaxMagnitude(double x, double y);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        byte Min(byte val1, byte val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        decimal Min(decimal val1, decimal val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Min(double val1, double val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        short Min(short val1, short val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Min(int val1, int val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        long Min(long val1, long val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        nint Min(nint val1, nint val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        sbyte Min(sbyte val1, sbyte val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        float Min(float val1, float val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        ushort Min(ushort val1, ushort val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        uint Min(uint val1, uint val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        ulong Min(ulong val1, ulong val2);

        /// <inheritdoc cref="global::System.Math.Min"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        nuint Min(nuint val1, nuint val2);

        /// <inheritdoc cref="global::System.Math.MinMagnitude"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double MinMagnitude(double x, double y);

        /// <inheritdoc cref="global::System.Math.ReciprocalEstimate"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double ReciprocalEstimate(double d);

        /// <inheritdoc cref="global::System.Math.ReciprocalSqrtEstimate"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double ReciprocalSqrtEstimate(double d);

        /// <inheritdoc cref="global::System.Math.Round"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        decimal Round(decimal d);

        /// <inheritdoc cref="global::System.Math.Round"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        decimal Round(decimal d, int decimals);

        /// <inheritdoc cref="global::System.Math.Round"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        decimal Round(decimal d, global::System.MidpointRounding mode);

        /// <inheritdoc cref="global::System.Math.Round"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        decimal Round(decimal d, int decimals, global::System.MidpointRounding mode);

        /// <inheritdoc cref="global::System.Math.Round"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Round(double a);

        /// <inheritdoc cref="global::System.Math.Round"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Round(double value, int digits);

        /// <inheritdoc cref="global::System.Math.Round"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Round(double value, global::System.MidpointRounding mode);

        /// <inheritdoc cref="global::System.Math.Round"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Round(double value, int digits, global::System.MidpointRounding mode);

        /// <inheritdoc cref="global::System.Math.Sign"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Sign(decimal value);

        /// <inheritdoc cref="global::System.Math.Sign"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Sign(double value);

        /// <inheritdoc cref="global::System.Math.Sign"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Sign(short value);

        /// <inheritdoc cref="global::System.Math.Sign"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Sign(int value);

        /// <inheritdoc cref="global::System.Math.Sign"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Sign(long value);

        /// <inheritdoc cref="global::System.Math.Sign"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Sign(nint value);

        /// <inheritdoc cref="global::System.Math.Sign"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        [global::System.CLSCompliantAttribute(false)]
        int Sign(sbyte value);

        /// <inheritdoc cref="global::System.Math.Sign"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        int Sign(float value);

        /// <inheritdoc cref="global::System.Math.Truncate"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        decimal Truncate(decimal d);

        /// <inheritdoc cref="global::System.Math.Truncate"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double Truncate(double d);

        /// <inheritdoc cref="global::System.Math.ScaleB"/>
        [global::System.Diagnostics.DebuggerStepThrough]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        double ScaleB(double x, int n);
    }
}
#pragma warning restore
